{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Build a group of EC2 instances",
  "Parameters" : {
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "Can contain only ASCII characters."
    },
    "InstanceType" : {
      "Description" : "Load database EC2 instance type",
      "Type" : "String",
      "Default" : "m3.medium",
      "AllowedValues" : [
        "m3.medium",
        "m3.large",
        "m4.large"
      ],
      "ConstraintDescription" : "Must be a valid EC2 instance type"
    },
    "SpotPrice" : {
      "Description" : "Spot price",
      "Type" : "Number",
      "MinValue" : "0.01",
      "MaxValue" : "1.00"
    },
    "AmiId" : {
      "Description" : "Which AMI should we use",
      "Type" : "AWS::EC2::Image::Id",
      "ConstraintDescription" : "Must be a valid AMI Id",
      "Default" : "ami-456d2b20"
    },
    "PogsPassword" : {
      "Description" : "The Database Password",
      "Type" : "String",
      "ConstraintDescription" : "Enter the database password"
    },
    "PogsHostname" : {
      "Description" : "The Database connection",
      "Type" : "String",
      "ConstraintDescription" : "Enter the database endpoint"
    }
  },
  "Resources" : {
    "WorkerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
        "VpcId" : "vpc-e2859f87",
        "SecurityGroupIngress" : [
          {
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : "0.0.0.0/0"
          }
        ]
      }
    },
    "CfnUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path" : "/",
        "Policies" : [
          {
            "PolicyName" : "Admin",
            "PolicyDocument" : {
              "Statement" : [
                {
                  "Effect" : "Allow",
                  "Action" : "*",
                  "Resource" : "*"
                }
              ]
            }
          }
        ]
      }
    },
    "HostKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : {
          "Ref" : "CfnUser"
        }
      }
    },
    "AutoScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : {
          "Fn::GetAZs" : ""
        },
        "LaunchConfigurationName" : {
          "Ref" : "LaunchConfig"
        },
        "VPCZoneIdentifier" : [
          "subnet-79041c43",
          "subnet-b3b59dc4",
          "subnet-3a195b63",
          "subnet-13552238"
        ],
        "DesiredCapacity" : "1",
        "MinSize" : "1",
        "MaxSize" : "1"
      }
    },
    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "Comment" : "Install a simple python application",
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "htop" : [],
                "sysstat" : [],
                "iotop" : []
              }
            },
            "files" : {
              "/etc/boto.cfg" : {
                "content" : {
                  "Fn::Join" : [
                    "",
                    [
                      "[Credentials]\n",
                      "aws_access_key_id = ", { "Ref" : "HostKeys" }, "\n",
                      "aws_secret_access_key = ", {"Fn::GetAtt" : ["HostKeys", "SecretAccessKey"]}, "\n"
                    ]
                  ]
                },
                "mode"   : "000544",
                "owner"  : "root",
                "group"  : "root"
              },
              "/home/ec2-user/aws-pogs/src/configuration/load.settings" : {
                "content" : {
                  "Fn::Join" : [
                    "",
                    [
                      "aws_pogs_user_id = \"root\"\n",
                      "aws_pogs_password = \"", { "Ref" : "PogsPassword"}, "\"\n",
                      "aws_pogs_hostname = \"", { "Ref" : "PogsHostname"}, "\"\n",
                      "aws_pogs_name = \"pogs_analysis\"\n",
                      "aws_pogs_port = \"3306\"\n"
                    ]
                  ]
                },
                "mode"   : "000400",
                "owner"  : "ec2-user",
                "group"  : "ec2-user"
              }
            }
          }
        }
      },
      "Properties" : {
        "ImageId" : { "Ref" : "AmiId" },
        "AssociatePublicIpAddress" : "true",
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/sdb",
            "VirtualName" : "ephemeral0"
          }
        ],
        "SpotPrice" : {
          "Ref" : "SpotPrice"
        },
        "InstanceType" : {
          "Ref" : "InstanceType"
        },
        "SecurityGroups" : [ { "Ref" : "WorkerSecurityGroup" } ],
        "KeyName" : {
          "Ref" : "KeyName"
        },
        "UserData" : {
          "Fn::Base64" : {
            "Fn::Join" : [
              "",
              [
                "#!/bin/bash -ve\n",
                "date > /home/ec2-user/starttime\n",
                "yum -y update\n",

                "# Run cfn-init\n",
                "/opt/aws/bin/cfn-init -v ",
                "         --stack ",
                {
                  "Ref" : "AWS::StackName"
                },
                "         --resource LaunchConfig ",
                "         --region ",
                {
                  "Ref" : "AWS::Region"
                },
                "\n",

                "cd /home/ec2-user/aws-pogs\n",
                "git pull\n",

                "# Signal success\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref" : "AWS::StackName"
                },
                "         --resource AutoScalingGroup ",
                "         --region ",
                {
                  "Ref" : "AWS::Region"
                },
                "\n",
                "date > /home/ec2-user/stoptime\n"
              ]
            ]
          }
        }
      }
    }
  }
}
